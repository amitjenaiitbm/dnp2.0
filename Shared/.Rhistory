# N_ContinuedBF_N= round((ch_pop04_2019/10) - n_iycf_cbf*(ch_pop04_2019/5)/100),
# Eggs and Flesh
# N_EFF = cut(n_iycf_eff, breaks = c(0, 20, 40, 60, 80, 100),
#             labels = c("5","4","3","2","1")),
# N_EFF_N= round((ch_pop04_2019/10) - n_iycf_eff*(ch_pop04_2019/3)/100),
# # Bottle feed
# N_Sweet= cut(n_iycf_swbvg, breaks = c(0, 20, 40, 60, 80, 100),
#              labels = c("5","4","3","2","1")),
# N_Sweet_N= round((ch_pop04_2019/10) - n_iycf_swbvg*(ch_pop04_2019/3)/100),
# Timely introduction of complementary feeding
# IYCFIntrofood = cut(iycf_introfood, breaks = c(0, 20, 40, 60, 80, 100),
#                 labels = c("5","4","3","2","1")),
# IYCFIntrofood_N = round((ch_pop04_2019/20) - iycf_introfood*(ch_pop04_2019/20)/100),
# Minimum acceptable diet/ minimum adequate diet
# IYCFMinaccdiet = cut(iycf_minaccdiet0, breaks = c(0, 20, 40, 60, 80, 100),
#                 labels = c("5","4","3","2","1")),
# IYCFMinaccdiet_N = round((ch_pop04_2019/3) - iycf_minaccdiet0*(ch_pop04_2019/3)/100),
# Child suffered from diarrhea in the last 2 weeks (reversed color)
ChDiarr = cut(ch_diarr, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
ChDiarr_N = round(ch_diarr*ch_pop04_2019/100),
# Symptoms of acute respiratory infection (ARI) in the last 2 weeks (reversed color)
ARISymp = cut(ari_symp, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
ARISymp_N = round(ari_symp*ch_pop04_2019/100),
# Timely introduction of complementary feeding
N_IYCFIntrofood = cut(n_iycf_introfood, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1")),
N_IYCFIntrofood_N = round((ch_pop04_2019/20) - n_iycf_introfood*(ch_pop04_2019/20)/100),
#
# Minimum acceptable diet/ minimum adequate diet
N_IYCFMinaccdiet = cut(n_iycf_minaccdiet0, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1")),
N_IYCFMinaccdiet_N = round((ch_pop04_2019/3) - n_iycf_minaccdiet0*(ch_pop04_2019/3)/100),
#--------------------------------------------------- Underlying determinants
# Women who are literate (reversed color)
WoLiterate = cut(wo_literate, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
WoLiterate_N = round(wom_pop1549_2019 - wo_literate*wom_pop1549_2019/100),
# Women with at least 10 years of education
WoSchool = cut(wo_school, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1")),
WoSchool_N = round(wom_pop1549_2019 - wo_school*wom_pop1549_2019/100),
# Women age 20-24 years married before age 18 years (reversed color)
WoMar18 = cut(wo2024_mar18, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
WoMar18_N = round(wo2024_mar18*(wom_pop1549_2019/7)/100),
# Women who had first birth before age 20 (reversed color)
Earlybirth20 = cut(wom_pregmothers_1519, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
# Has access to improved toilet facility
ImpLatrine = cut(imp_latrine, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1")),
# Has access to improved source of drinking water
ImpDrinkw = cut(imp_drinkw, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1")),
# Practices safe disposal of feces
# SafeDisp = cut(safe_disp, breaks = c(0, 20, 40, 60, 80, 100),
#                labels = c("5","4","3","2","1")),
# Availability of soap and water for washing hands in the HH
# HandHygeine = cut(hand_hygeine, breaks = c(0, 20, 40, 60, 80, 100),
#                   labels = c("5","4","3","2","1")),
# HHs with BPL cards (proxy of poverty) (reversed color)
BplCard = cut(bpl_card, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
# Open defecation (reversed color)
OpenDef = cut(open_def, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("1","2","3","4","5")),
# Households with access to electricity
Electric = cut(electric, breaks = c(0, 20, 40, 60, 80, 100),
labels = c("5","4","3","2","1"))
)
}
df %<>% select(1:8,ch_pop04_2019,wom_pop1549_2019,pregwom_2019,
Stunting_N,Wasting_N,Underweight_N,SevereWasting_N,Overweight_N,
Anemia_ch_N,WomenUnderweight_N,Anemia_nonpreg_N,
Anemia_preg_N,WomenOver_N,WomenUnderweight_N,
WomenHypertension_N,WomenDiabetes_N)
# Non comparable
df %<>% filter(comparable==0)
n_distinct(df$district_code) # 132 districts
# NC
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==0 & year=="2019") %>% droplevels()
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
# NC
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==0 & year=="2019") %>% droplevels()
n_distinct(dnp$district_code) # 132 dists
iips<-read_excel("Data/IIPS_NFHS4&5_factsheet_India, state, & dist.xlsx") %>%
filter(comparable==0 & year=="2019-20")
n_distinct(iips$district_code)
# Check duplicates
iips %>% group_by(year,district_code) %>% filter(n()>1) %>% dplyr::summarize(n=n())
iips %<>% filter(sub_level=="Total")
n_distinct(iips$district_code)
table(iips$year)
iips %<>% mutate(year=case_when(
#year=="2015-16" ~ "2016",
year=="2019-20" ~ "2019",
TRUE ~ as.character(year)))
iips %<>%  select(state_code,year,district_code,school10yr_women,ifa_180,hh_healthins)
# Join
dnp %<>% left_join(iips,by=c("year","state_code","district_code"))
sa_d<- st_read(paste0(datapath2,"district/INDIA.shp"))
sa_d %<>% mutate(State=ifelse(is.na(State),UT,State))
n_distinct(sa_d$State) # 29 states, 8 UTs
n_distinct(sa_d$Name) # 733 districts
# Latest India shapefile with Ladakh
sa_f<- st_read(paste0(datapath2,"India_State_Boundary.shp"))
names(sa_f)
table(sa_f$State_Name)
n_distinct(sa_f$State_Name)
library(sf)
the_crs <- st_crs(sa_f, as_text = TRUE)
sa_d_crs<- sa_d %>% st_set_crs(4326) %>% st_transform(crs=the_crs)
st_check1<-st_set_geometry(sa_d_crs,NULL)
# Excel with district name and id from stata data
mt1<-read_excel("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/9. NFHS5/Data/NFHS 5_IIPS/4. Supporting resources/State and district codes with shape file codes.xlsx",sheet="Sheet1")
names(mt1)
n_distinct(mt1$id)
sa_d_crs1 <- sa_d_crs %>% left_join(mt1,by=c("State","Name"))
n_distinct(sa_d_crs1$id)
st_check<-st_set_geometry(sa_d_crs1,NULL)
dnp <- rename(dnp, "id" = "shp_dist_id")
sa_d_crs2<- sa_d_crs1 %>% filter(id %in% dnp$id)
df_shape2<- sa_d_crs2 %>% left_join(dnp, by = "id")
df <- rename(df, "id" = "shp_dist_id") %>% filter(year)
df_shape<- sa_d_crs1 %>% left_join(df, by = "id")
df_shape19 <- df_shape %>% filter(Year == "2019")
names(df)
#df <- rename(df, "id" = "shp_dist_id") %>% filter(year)
df_shape<- sa_d_crs1 %>% left_join(df, by = "id")
n_distinct(df$shp_dist_id)
df <- read_dta(paste0(datapath, "IIPS_NFHS4&5_factsheet&report_msp.dta")) %>%
zap_label() %>%
as_factor(.) %>%
filter(year != "2006") %>% filter(level=="District") %>%
rename("Year" = "year", "pregwom_2019"="pregwom")
df %<>% mutate(shp_dist_id=
ifelse(district=="Lower Dibang Valley",24,shp_dist_id))
n_distinct(df$district_code)
n_distinct(df$shp_dist_id)
# Non comparable
df %<>% filter(comparable==0)
n_distinct(df$district_code) # 132 districts
df <- rename(df, "id" = "shp_dist_id") #%>% filter(year)
df_shape<- sa_d_crs1 %>% left_join(df, by = "id")
df_shape19 <- df_shape %>% filter(Year == "2019")
mytheme <- function(...) {
theme(
plot.title = element_text(size = 14,color = "grey10",  face = "bold", hjust = 0.5),
plot.subtitle = element_text(face = "italic", color = "gray10", size = 12),
plot.caption = element_text(face = "italic", size = 12, color = "gray10"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = "white", color = NA),
legend.title = element_text(size = 13, face = "bold"),
legend.text = element_text(size = 12),
legend.direction = "horizontal",
legend.position = "top",
legend.background = element_rect(fill = NA, color = NA),
panel.border = element_rect(color = NA, fill = NA)
)
}
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Shared/Non-comparable/Maps")
table(dnp$state_code)
state_code<- c(3,6,7,9,12,16)
names(df_shape2)
state_code<- c(3,6,7,9,12,16)
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Shared/Non-comparable/Maps_mar22")
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Shared/Non-comparable/Maps_mar22")
state_code<- c(3,6,7,9,12,16)
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- df_shape19 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 6, height = 6, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
sa_d_crs1 <- sa_d_crs %>% left_join(mt1,by=c("State","Name"))
n_distinct(sa_d_crs1$id)
sa_d_crs2<- sa_d_crs1 %>% filter(id %in% dnp$id)
df_shape2<- sa_d_crs2 %>% left_join(dnp, by = "id")
rm(list=ls())
library(haven)
library(tidyverse)
library(magrittr)
library(ggpubr)
library(openxlsx)
library(stringr)
library(writexl)
library(funModeling)
library(sf)
library(ggthemes)
library(readxl)
options(scipen=9999999)
source("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/9. NFHS5/1. Presentations/Multi-state PPT_NFHS5_Phase1&2/1. Dofile/config_NS.R")
# District ####
# Data indicator
df <- read_dta(paste0(datapath, "IIPS_NFHS4&5_factsheet&report_msp.dta")) %>%
zap_label() %>%
as_factor(.) %>%
filter(year != "2006") %>% filter(level=="District") %>%
rename("Year" = "year", "pregwom_2019"="pregwom")
df %<>% mutate(shp_dist_id=
ifelse(district=="Lower Dibang Valley",24,shp_dist_id))
n_distinct(df$district_code)
n_distinct(df$shp_dist_id)
# NC
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==0 & year=="2019") %>% droplevels()
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
# NC
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==0 & year=="2019") %>% droplevels()
n_distinct(dnp$district_code) # 132 dists
sa_d<- st_read(paste0(datapath2,"district/INDIA.shp"))
sa_d %<>% mutate(State=ifelse(is.na(State),UT,State))
n_distinct(sa_d$State) # 29 states, 8 UTs
n_distinct(sa_d$Name) # 733 districts
table(sa_d$State)
# Latest India state shapefile with Ladakh
sa_f<- st_read(paste0(datapath2,"India_State_Boundary.shp"))
names(sa_f)
table(sa_f$State_Name)
n_distinct(sa_f$State_Name)
library(sf)
the_crs <- st_crs(sa_f, as_text = TRUE)
sa_d_crs<- sa_d %>% st_set_crs(4326) %>% st_transform(crs=the_crs)
names(sa_d_crs)
# Excel with district name and id from stata data
mt1<-read_excel("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/9. NFHS5/Data/NFHS 5_IIPS/4. Supporting resources/State and district codes with shape file codes.xlsx",sheet="Sheet1")
names(mt1)
n_distinct(mt1$id)
sa_d_crs1 <- sa_d_crs %>% left_join(mt1,by=c("State","Name"))
n_distinct(sa_d_crs1$id)
dnp <- rename(dnp, "id" = "shp_dist_id")
sa_d_crs2<- sa_d_crs1 %>% filter(id %in% dnp$id)
df_shape2<- sa_d_crs2 %>% left_join(dnp, by = "id")
df <- rename(df, "id" = "shp_dist_id") #%>% filter(year)
df_shape<- sa_d_crs1 %>% left_join(df, by = "id")
df_shape19 <- df_shape %>% filter(Year == "2019")
mytheme <- function(...) {
theme(
plot.title = element_text(size = 14,color = "grey10",  face = "bold", hjust = 0.5),
plot.subtitle = element_text(face = "italic", color = "gray10", size = 12),
plot.caption = element_text(face = "italic", size = 12, color = "gray10"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = "white", color = NA),
legend.title = element_text(size = 13, face = "bold"),
legend.text = element_text(size = 12),
legend.direction = "horizontal",
legend.position = "top",
legend.background = element_rect(fill = NA, color = NA),
panel.border = element_rect(color = NA, fill = NA)
)
}
names(sa_d_crs1)
names(df_shape)
names(mt1)
table(sa_d_crs1$State)
table(df$state_code)
table(dnp$state_code)
View(df)
# Excel with district name and id from stata data
mt1<-read_excel("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Data/State and district codes with shape file codes.xlsx",sheet="Sheet1")
names(mt1)
n_distinct(mt1$id)
sa_d_crs1 <- sa_d_crs %>% left_join(mt1,by=c("State","Name"))
n_distinct(sa_d_crs1$id)
st_check<-st_set_geometry(sa_d_crs1,NULL)
for (i in 1:36) {
z = sa_d_crs1$State[sa_d_crs1$state_code==i][1]
print(paste0(i, ": ",z))
}
names(df_shape2)
for (i in 1:36) {
z = df_shape2$State[df_shape2$state_code==i][1]
print(paste0(i, ": ",z))
}
for (i in 1:36) {
z = sa_d_crs1$State[sa_d_crs1$state_code==i][1]
print(paste0(i, ": ",z))
}
state_code<- c(3,6,7,9,12,16)
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- sa_d_crs1 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 6, height = 6, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Shared/Non-comparable/Maps_mar22")
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- sa_d_crs1 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 6, height = 6, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
state_code<-c(17,18,19,22,23,24,27,36)
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- sa_d_crs1 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 6, height = 6, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
state_code<- c(3,6,7,9,12,16)
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- sa_d_crs1 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 12, height = 8, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
state_code<-c(17,18,19,22,23,24,27,36)
for (i in state_code){
df_plot1 <- df_shape2 %>% filter(state_code == i)
df_plot3 <- sa_d_crs1 %>% filter(state_code == i)
for(dist in 1:nrow(df_plot1)){
df_plot2<- df_plot1[dist,]
# State Map
ggplot()+
geom_sf(data = df_plot3,
fill = "#88B440",colour = "gray60",
size = 0.4, show.legend = F)+
geom_sf(data = df_plot2,aes(group=id,fill=id),
colour = "gray65", fill="#E77925",
size = 0.2, show.legend = F)+
coord_sf()+
#scale_fill_manual(values = c("#E77925")) +
mytheme()+
labs(title = NULL,
subtitle = NULL)
st_nm<-df_plot2$State
dist_nm<-df_plot2$district
ggname <- paste(st_nm, dist_nm, sep="_")
ggsave(filename = paste0(ggname, ".jpeg"),
units="in", width = 12, height = 8, dpi = 300,bg="white")
rm(list=c(st_nm,dist_nm,ggname))
}
}
source("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/9. NFHS5/1. Presentations/Multi-state PPT_NFHS5_Phase1&2/1. Dofile/config_NS.R")
# Data indicator
st <- read_dta(paste0(datapath, "IIPS_NFHS4&5_factsheet&report_msp.dta")) %>%
zap_label() %>%
as_factor(.) %>%
filter(year == "2019") %>% filter(level=="State") %>%
#rename("Year" = "year", "pregwom_2019"="pregwom") %>%
I()
# Data indicator
st <- read_dta(paste0(datapath, "IIPS_NFHS4&5_factsheet&report_msp.dta")) %>%
zap_label() %>%
as_factor(.) %>%
filter(year == "2019"|year=="2016") %>% filter(level=="State") %>%
#rename("Year" = "year", "pregwom_2019"="pregwom") %>%
I()
table(st$state)
# IIPS data to merge school variable
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
iips<-read_excel("Data/IIPS_NFHS4&5_factsheet_India, state, & dist.xlsx") %>%
filter(level=="State" & year=="2019-20" & sub_level=="Total") %>% select(state_code,school10yr_women,ifa_180,hh_healthins)
n_distinct(iips$state_code) # 36 states
st %<>% left_join(iips,by="state_code")
View(st)
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
# Comp
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==1) %>% droplevels()
n_distinct(dnp$district_code) # 575 dists
nm<- colnames(dnp)
st <- select(st, one_of(nm))
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
# Comp
dnp<-read_excel("Data/MSP_modified.xlsx") %>% filter(comparable==1) %>% droplevels()
iips<-read_excel("Data/IIPS_NFHS4&5_factsheet_India, state, & dist.xlsx") %>%
filter(comparable==1)
# Check duplicates
iips %>% group_by(year,district_code) %>% filter(n()>1) %>% dplyr::summarize(n=n())
iips %<>% filter(sub_level=="Total")
# Check duplicates
iips %>% group_by(year,district_code) %>% filter(n()>1) %>% dplyr::summarize(n=n())
n_distinct(iips$district_code)
table(iips$year)
iips %<>%  select(state_code,year,district_code,school10yr_women,ifa_180,hh_healthins)
# Join
dnp %<>% left_join(iips,by=c("year","state_code","district_code"))
source("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/9. NFHS5/1. Presentations/Multi-state PPT_NFHS5_Phase1&2/1. Dofile/config_NS.R")
# Data indicator
st <- read_dta(paste0(datapath, "IIPS_NFHS4&5_factsheet&report_msp.dta")) %>%
zap_label() %>%
as_factor(.) %>%
filter(year == "2019"|year=="2016") %>% filter(level=="State") %>%
#rename("Year" = "year", "pregwom_2019"="pregwom") %>%
I()
# IIPS data to merge school variable
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/")
iips<-read_excel("Data/IIPS_NFHS4&5_factsheet_India, state, & dist.xlsx") %>%
filter(level=="State" & year=="2019-20" & sub_level=="Total") %>% select(state_code,school10yr_women,ifa_180,hh_healthins)
n_distinct(iips$state_code) # 36 states
st %<>% left_join(iips,by="state_code")
nm<- colnames(dnp)
st <- select(st, one_of(nm))
setwd("C:/Users/nishmeetsingh/Dropbox (IFPRI)/POSHAN-II/3.1 Knowledge Products/Knowledge Products/DNPs v.2.0/Shared")
write_xlsx(st,paste0("State_data_",format(Sys.time(), "%d%m%Y"),".xlsx"))
